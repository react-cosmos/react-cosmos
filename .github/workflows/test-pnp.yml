name: test-pnp
on:
  pull_request:
  push:
    branches: main
jobs:
  pnp-install-and-run:
    runs-on: ubuntu-latest
    env:
      SKIP_YARN_COREPACK_CHECK: true
    steps:
      - run: git config --global core.autocrlf false

      - name: Clone react-cosmos monorepo
        uses: actions/checkout@v3
        with:
          path: react-cosmos

      - name: Clone PnP example repo
        uses: actions/checkout@v3
        with:
          repository: react-cosmos/pnp-example
          path: pnp-example

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: |
            react-cosmos/yarn.lock
            pnp-example/yarn.lock

      - name: Build react-cosmos packages
        run: |
          cd react-cosmos
          yarn install --frozen-lockfile --network-timeout 600000
          yarn build

      - name: Run PnP example with linked react-cosmos packages
        run: |
          cd pnp-example
          yarn set version stable
          yarn link ../react-cosmos/packages/react-cosmos-core
          yarn link ../react-cosmos/packages/react-cosmos-renderer
          yarn link ../react-cosmos/packages/react-cosmos-dom
          yarn link ../react-cosmos/packages/react-cosmos-ui
          yarn link ../react-cosmos/packages/react-cosmos
          yarn link ../react-cosmos/packages/react-cosmos-plugin-webpack
          yarn install --immutable --network-timeout 600000
          yarn cosmos &

      - name: Wait until Cosmos is live
        run: npx wait-on -t 10000 http://localhost:5000

      - name: Wait until Cosmos renderer is live
        run: npx wait-on -t 10000 http://localhost:5000/renderer.html
