// @flow

// This type might be silly, but it should be stricter than `Object`
export type KeyValue = { [string]: mixed };

export type FixtureRenderKey = number;

export type FixtureDecoratorId = number;

export type FixtureStateValue = {
  serializable: boolean,
  key: string,
  stringified: string
};

export type FixtureStateValues = FixtureStateValue[];

export type ComponentFixtureState = {
  decoratorId: FixtureDecoratorId,
  elPath: string,
  componentName: string,
  renderKey: FixtureRenderKey,
  props: null | FixtureStateValues,
  state: null | FixtureStateValues
};

export type FixtureState = {
  components: ComponentFixtureState[],
  [key: string]: mixed
};

declare export var DEFAULT_RENDER_KEY: FixtureRenderKey;

declare export function extractValuesFromObj(obj: KeyValue): FixtureStateValues;

declare export function extendObjWithValues(
  obj: KeyValue,
  values: FixtureStateValues
): KeyValue;

declare export function getCompFixtureStates(
  fixtureState: null | FixtureState,
  decoratorId?: FixtureDecoratorId
): ComponentFixtureState[];

declare export function findCompFixtureState(
  fixtureState: null | FixtureState,
  decoratorId: FixtureDecoratorId,
  elPath: string
): ?ComponentFixtureState;

declare export function createCompFixtureState({
  fixtureState: null | FixtureState,
  decoratorId: FixtureDecoratorId,
  elPath: string,
  componentName: string,
  props: null | FixtureStateValues,
  state: null | FixtureStateValues
}): ComponentFixtureState[];

declare export function updateCompFixtureState({
  fixtureState: null | FixtureState,
  decoratorId: FixtureDecoratorId,
  elPath: string,
  props?: null | FixtureStateValues,
  state?: null | FixtureStateValues,
  resetInstance?: boolean
}): ComponentFixtureState[];
