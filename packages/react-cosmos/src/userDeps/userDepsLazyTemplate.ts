import {
  userDepsImportMap,
  userDepsImportPath,
  UserDepsTemplateArgs,
} from './userDepsShared.js';

export function userDepsLazyTemplate({
  globalImports,
  fixturePaths,
  decoratorPaths,
  rendererConfig,
  rootDir,
  relativeToDir,
}: UserDepsTemplateArgs) {
  const fixtures = userDepsImportMap(fixturePaths, rootDir, relativeToDir);
  const fixtureKeys = Object.keys(fixtures);

  const decorators = userDepsImportMap(decoratorPaths, rootDir, relativeToDir);
  const decoratorKeys = Object.keys(decorators);

  return `
// This file is automatically generated by Cosmos. Add it to .gitignore and
// only edit if you know what you're doing.

// Keeping global imports here is superior to making them bundle entry points
// because this way they become hot-reloadable.
${globalImports
  .map(p => `import '${userDepsImportPath(p, relativeToDir)}';`)
  .join(`\n`)}

export const rendererConfig = ${JSON.stringify(rendererConfig, null, 2)};

const fixtures = {
${fixtureKeys
  .map(k => `  '${k}': { getModule: () => import('${fixtures[k]}') }`)
  .join(`,\n`)}
};

const decorators = {
${decoratorKeys
  .map(k => `  '${k}': { getModule: () => import('${decorators[k]}') }`)
  .join(`,\n`)}
};

export const moduleWrappers = {
  lazy: true,
  fixtures,
  decorators,
};
`.trimStart();
}
